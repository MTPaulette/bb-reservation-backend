
$payements = Payement::query()
    ->when($period, function ($query, $period) {
        $query->whereMonth('created_at', $period);
    })
    ->when(!$period, function ($query) {
        $query->whereYear('created_at', period('Y'));
    })
    ->get();

    ==============================================


Voici un exemple de requête que vous pouvez utiliser :

SELECT 
  (link unavailable),
  MIN(h.opening_time) AS opening_time_min,
  MAX(h.closing_time) AS closing_time_max
FROM 
  agences a
  LEFT JOIN heures_ouverture h ON (link unavailable) = h.agence_id
GROUP BY 
  (link unavailable)

Dans cette requête, nous utilisons une jointure gauche pour relier les agences avec leurs heures d'ouverture. Nous utilisons ensuite les fonctions MIN et MAX pour récupérer l'heure d'ouverture minimum et l'heure de fermeture maximum pour chaque agence.

Ensuite, vous pouvez utiliser cette requête dans votre contrôleur Laravel pour récupérer les données et les afficher dans votre vue.

Voici un exemple de code que vous pouvez utiliser dans votre contrôleur :

public function getAgenceHours()
{
  $agences = Agence::with('heuresOuverture')
    ->select('id', 'name')
    ->selectRaw('MIN(heures_ouverture.opening_time) AS opening_time_min')
    ->selectRaw('MAX(heures_ouverture.closing_time) AS closing_time_max')
    ->groupBy('id')
    ->get();

  return view('agence_hours', compact('agences'));
}

=================================


->when(
                    $filters['category'] ?? false,
                    fn($query, $value) => $query->where('category_id', '=', $value)
                )
                ->when(
                    $filters['q'] ?? false,
                    fn($query, $value) => $query->where('name', 'LIKE', "%$value%")->orWhere('description', 'LIKE', "%$value%")
                );


=============================

// app/Providers/MailConfigServiceProvider.php

namespace App\Providers;

use Illuminate\Support\ServiceProvider;
use Illuminate\Support\Facades\Mail;
use App\Models\Option;

class MailConfigServiceProvider extends ServiceProvider
{
    public function boot()
    {
        $this->configureMail();
        $this->listenForOptionChanges();
    }

    protected function configureMail()
    {
        $options = Option::where('key', 'mail_config')->first();

        if ($options) {
            $mailConfig = json_decode($options->value, true);

            config([
                'mail.mailers.smtp.host' => $mailConfig['host'],
                'mail.mailers.smtp.port' => $mailConfig['port'],
                'mail.mailers.smtp.username' => $mailConfig['username'],
                'mail.mailers.smtp.password' => $mailConfig['password'],
                'mail.from.address' => $mailConfig['from_address'],
                'mail.from.name' => $mailConfig['from_name'],
            ]);

            Mail::reconnect();
        }
    }

    protected function listenForOptionChanges()
    {
        Option::updated(function ($option) {
            if ($option->key === 'mail_config') {
                $this->configureMail();
            }
        });
    }
}
